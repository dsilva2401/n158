{"version":3,"sources":["../src/resources/classes/MongoModel.js"],"names":["mongodb","ObjectID","MongoModel","db","name","jsonSchema","options","collection","schema","indexes","createIndexes","forEach","index","createIndex","key","data","deferred","validationResult","errors","length","reject","resolve","promise","validate","then","insertOne","err","r","ops","catch","insert","id","remove","_id","resp","findOne","findById","instance","keys","underscore","union","Object","attr","update","criteria","find","toArray","pipeline","aggregate","cursor","get"],"mappings":"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","file":"MongoModel.js","sourcesContent":["import * as mongodb from 'mongodb';\nimport underscore from 'underscore';\nimport {validate as validateJSONSchema} from 'jsonschema';\nimport {deferResponse} from '../services';\nvar ObjectID = mongodb.ObjectID;\n\nexport class MongoModel {\n\n    constructor (db, name, jsonSchema, options) {\n        this.name = name;\n        this.db = db;\n        this.collection = db.collection(name);\n        this.schema = jsonSchema || {};\n        this.options = options || {};\n        if (options.indexes) {\n            this.createIndexes(options.indexes);\n        }\n    }\n\n    createIndexes (indexes) {\n        indexes.forEach((index) => {\n            this.collection.createIndex(index.key, index.options);\n        });\n    }\n\n    validate (data) {\n        var deferred = deferResponse();\n        var validationResult = validateJSONSchema(\n            data, this.schema\n        )\n        if (validationResult.errors.length) {\n            deferred.reject(400, 'Validation error', validationResult.errors)\n        } else {\n            deferred.resolve(validationResult);\n        }\n        return deferred.promise;\n    }\n    \n    insert (data) {\n        var deferred = deferResponse();\n        this.validate(data).then(() => {\n            this.collection.insertOne(data, (err, r) => {\n                if (err) {\n                    deferred.reject(500, 'Insertion error on db', err);\n                    return;\n                }\n                deferred.resolve(r.ops[0]);\n            });\n        }).catch((err) => {\n            deferred.reject(400, 'Validation error', err);\n        });\n        return deferred.promise;\n    }\n\n    register (data) {\n        return this.insert(data);\n    }\n\n    removeById (id) {\n        var deferred = deferResponse();\n        this.collection.remove({\n            _id: new ObjectID(id)\n        }, (err, resp) => {\n            if (err) {\n                deferred.reject(500, 'Remove error on db', err);\n                return;\n            }\n            deferred.resolve(resp);\n        });\n        return deferred.promise;\n    }\n\n    findById (id) {\n        var deferred = deferResponse();\n        this.collection.findOne({\n            _id: new ObjectID(id)\n        }, (err, resp) => {\n            if (err) {\n                deferred.reject(500, 'Find error on db', err);\n                return;\n            }\n            if (!resp) {\n                deferred.reject(404, 'Item not found');\n                return;\n            }\n            deferred.resolve(resp);\n        });\n        return deferred.promise;\n    }\n\n    update (id, data) {\n        var deferred = deferResponse();\n        this.findById(id).then((instance) => {\n            var keys = underscore.union(Object.keys(instance), Object.keys(data));\n            keys.forEach((attr) => {\n                if (attr == '_id') return;\n                if (data[attr] === null) {\n                    instance[attr] = null;\n                } else if (data[attr] === false) {\n                    instance[attr] = false;\n                } else if (data[attr] === 0) {\n                    instance[attr] = 0;\n                } else {\n                    instance[attr] = (data[attr] || instance[attr]);\n                }\n            });\n            this.collection.update({\n                _id: new ObjectID(id)\n            }, instance, (err, resp) => {\n                if (err) {\n                    deferred.reject(500, 'Update error on db', err);\n                    return;\n                }\n                deferred.resolve(instance);\n            });\n        }).catch((err) => {\n            deferred.reject(err);\n        });\n        return deferred.promise;\n    }\n\n    \n    findOne (criteria) {\n        var deferred = deferResponse();\n        this.collection.findOne( criteria, (err, r) => {\n            if (err){\n                deferred.reject(500, 'Find one error on db', err);\n                return;\n            }\n            deferred.resolve(r);\n        });\n        return deferred.promise;\n    }\n\n    findAll (criteria) {\n        var deferred = deferResponse();\n        this.collection.find( criteria, (err, r) => {\n            if (err){\n                deferred.reject(500, 'Find error on db', err);\n                return;\n            }\n            deferred.resolve(r.toArray());\n        });\n        return deferred.promise;\n    }\n\n    aggregate (pipeline, options) {\n        var deferred = deferResponse();\n        this.collection.aggregate(pipeline, options, (err, cursor) => {\n            if (err) {\n                deferred.reject(500, 'Aggregate error on db', err);\n                return;\n            }\n            cursor.get((err, data) => {\n                if (err) {\n                    deferred.reject(500, 'Cursor error on db', err);\n                    return;\n                }\n                deferred.resolve(data);\n            })\n        });\n        return deferred.promise;\n    }\n\n}"]}